Zadacha 11, str.57

int main()
{
	const int N = 6;
	int arr[N], i, max;

	for (i = 0; i < N; i++)
	{
		printf("\nVvedite elementy massiva: ");
		scanf_s("\n%d", &arr[i]);
	}

	max = arr[0];

	for (i = 1; i < N; i++)
		if (arr[i] > max)
		{
			max = arr[i];
		}

	printf("\n\n%d", max);
		
	printf("\n\t\t\tThe end");
	_getch();
	return 0;
}

///////////////////////

Zadacha 12, str.57

int main()
{
	const int N = 6;
	double arr[N], min;
	int i;

	for (i = 0; i < N; i++)
	{
		printf("\nVvedite elementy massiva (veshestvennye chisla): ");
		scanf_s("\n%lf", &arr[i]);
	}

	min = arr[0];

	for (i = 1; i < N; i++)
		if (arr[i] < min)
		{
			min = arr[i];
		}

	printf("\n\n%lf", min);
		
	printf("\n\t\t\tThe end");
	_getch();
	return 0;
}

///////////////////////

Zadacha 13, str.58

int main()
{
	const int N = 6;
	double arr[N], max;
	int i;

	for (i = 0; i < N; i++)
	{
		printf("\nVvedite elementy massiva (veshestvennye chisla): ");
		scanf_s("\n%lf", &arr[i]);
	}

	max = arr[0];
	int k = 0;

	for (i = 1; i < N; i++) {
		if (arr[i] > max)
		{
			max = arr[i];
			k = i;
		}
	}

	printf("\n\nmax = %lf;\ni = %d", max, k);

	printf("\n\t\t\tThe end");
	_getch();
	return 0;
}

///////////////////////

Zadacha 14 str.58

int main()
{
	const int N = 6;
	double arr[N], min;
	int i;

	for (i = 0; i < N; i++)
	{
		printf("\nVvedite elementy massiva (veshestvennye chisla): ");
		scanf_s("\n%lf", &arr[i]);
	}

	min = arr[0];
	int k = 0;

	for (i = 1; i < N; i++) {
		if (arr[i] < min)
		{
			min = arr[i];
			k = i;
		}
	}

	printf("\n\nmax = %lf;\ni = %d;", min, k);
		
	printf("\n\t\t\tThe end");
	_getch();
	return 0;
}

///////////////////////

Zadacha 15, str. 58

int main()
{
	const int N = 20;
	int arr[N], i;

	for (i = 0; i < N; i++)
	{
		printf("\nVvedite element massiva: ");
		scanf_s("%d", &arr[i]);
	}

	int max1 = arr[0];
	int max2 = arr[9];
	int k = 0;
	int l = 0;
	for (i = 0; i < N/2; i++)
	{
		if (arr[i] > max1)
		{
			max1 = arr[i];
			k = i;
		}
	}
	for (i = 9; i < N; i++)
	{
		if (arr[i] > max2)
		{
			max2 = arr[i];
			l = i;
		}
	}

	arr[k] = max2;
	arr[l] = max1;
	
	for (i = 0; i < N; i++)
	{
		printf("%d\t", arr[i]);
	}


	printf("\n\t\t\tThe end");
	_getch();
	return 0;
}

///////////////////////
10.01.18
/////////////////////////////

Zadacha 4, str.62 

int main() 	//sortirovka po ubyvaniju  - puzyrkom
{
	const int N = 10;
	int arr[N], j, buf, k;

	for (j = 0; j < N; j++)
	{
		printf("\nVvedite element massiva arr[%d] = " , j);
		scanf_s("%d", &arr[j]);
	}

	for (int i = 1; i <= N; i++)
	{
		for (j = 0; j < N - i; j++)
		{
			if (arr[j + 1] > arr[j]) {
				buf = arr[j + 1];
				arr[j + 1] = arr[j];
				arr[j] = buf;
			}
		}
	}


	for (j = 0; j < N; j++)
	{
		printf("%d\t", arr[j]);
	}




	printf("\n\t\t\tThe end");
	_getch();
	return 0;
}

/////// sortirovka po ubyvaniju poiskom naibolshego el-ta

int main()
{
	const int N = 10;
	int arr[N], j, buf, k;

	for (j = 0; j < N; j++)
	{
		printf("\nVvedite element massiva arr[%d] = " , j);
		scanf_s("%d", &arr[j]);
	}


	for (j = 0; j <= N - 1; j++)
	{
		k = j;
		for (int i = j + 1; i < N; i++)
		{
			if (arr[k] < arr[i])
			{
				k = i;
			}
		}
		buf = arr[j];
		arr[j] = arr[k];
		arr[k] = buf;

		
	}

	for (j = 0; j < N; j++)
	{
		printf("%d\t", arr[j]);
	}




	printf("\n\t\t\tThe end");
	_getch();
	return 0;
}

/////////////////////////////

Zadacha 5, str.62  //metod Shella - po vozrastaniju
 
int main()
{
	const int N = 10;
	int arr[N], i, j, buf, k, k1;

	for (i = 0; i < N; i++) {
		printf("\nVvedite element massiva arr[%d] = ", i);
		scanf_s("%d", &arr[i]);
	}

	for (k = N / 2; k > 0; k /= 2)
	{
		do
		{
			k1 = 0;
			for (i = 0, j = k; j < N; i++, j++)
			{
				if (arr[i] > arr[j])
				{
					buf = arr[i];
					arr[i] = arr[j];
					arr[j] = buf;
					k1++;
				}
			}
		}
		while (k1);
	}

	for (i = 0; i < N; i++)
	{
		printf("\narr[%d] = %d", i, arr[i]);
	}

	printf("\n\t\t\tThe end");
	_getch();
	return 0;
}

/////////////////////////////

Zadacha 6, str.62  //metod Shella - po ubyvaniju

int main()
{
	const int N = 10;
	int arr[N], i, j, buf, k, k1; // k - chtoby delit N na 2; k1 schetchik zamen elementov;

	for (i = 0; i < N; i++) {
		printf("\nVvedite element massiva arr[%d] = ", i);
		scanf_s("%d", &arr[i]);
	}

	for (k = N/2; k > 0; k /=2)
	{
		do
		{
			k1 = 0;
			for (i = 0, j = k; j < N; i++, j++)
			{
				if (arr[i] < arr[j])
				{
					buf = arr[i];
					arr[i] = arr[j];
					arr[j] = buf;
					k1++;
				}
			}
		} 
		while (k1);
	}

	for (i = 0; i < N; i++)
	{
		printf("\narr[%d] = %d", i, arr[i]);
	}

	printf("\n\t\t\tThe end");
	_getch();
	return 0;
}

/////////////////////////////

Zadacha 7, str.62

int main()
{
	const int N = 10;
	int arr[N], i, j, buf, k, k1, x, y, buf2; // k - chtoby delit N na 2; k1 schetchik zamen elementov;

	for (i = 0; i < N; i++) {
		printf("\nVvedite element massiva arr[%d] = ", i);
		scanf_s("%d", &arr[i]);
	}

	for (k = N/2; k > 0; k /=2)
	{
		do
		{
			k1 = 0;
			for (i = 0, j = k; j < N; i++, j++)
			{
				if (arr[i] < arr[j])
				{
					buf = arr[i];
					arr[i] = arr[j];
					arr[j] = buf;
					k1++;
				}
			}
		} 
		while (k1);
	}

	for (i = 0; i < N; i++)
	{
		printf("\narr[%d] = %d", i, arr[i]);
	}

	printf("\nVvedite 2 chisla ot 0 do 10:");
	scanf_s("\n%d %d", &i,&j);

	for (i = 0; i < N; i++)
	{
		buf2 = arr[i];
		arr[i] = arr[j];
		arr[j] = buf2;
	}

	for (i = 0; i < N; i++)
	{
		printf("\narr[%d] = %d", i, arr[i]);
	}

	printf("\n\t\t\tThe end");
	_getch();
	return 0;
}

/////////////////////////////

Zadacha 8, str.62

/////////////////////////////


Zadacha 9, str.63

/////////////////////////////

Zadacha 1, str.65

#include<time.h>

int main()
{
	srand(time(NULL));
	const int N = 3, M = 4;
	int arr[N][M], i, j, sum = 0;
	//zapolnyaem massiv dannymi ot 1 do 30;

	for (i = 0; i < N; i++)
	{
		for (j = 0; j < M; j++) 
		{
			arr[i][j] = 1 + rand() % 30;
			sum += arr[i][j];
		}
	}

	for (i = 0; i < N; i++)
	{
		for (j = 0; j < M; j++)
		{
			printf("%-5d", arr[i][j]);
		}
		printf("\n\n");
	}

	printf("\n\nsum = %d", sum);

	printf("\n\t\t\tThe end");
	_getch();
	return 0;
}

/////////////////////////////

Zadacha 2, str.65

int main()
{
	srand(time(NULL));
	const int N = 3, M = 4;
	int arr[N][M], i, j, sum = 0, max, min, k1, k2, p1, p2;
	//zapolnyaem massiv dannymi ot 1 do 30;

	for (i = 0; i < N; i++)
	{
		for (j = 0; j < M; j++) 
		{
			arr[i][j] = 1 + rand() % 30;
			sum += arr[i][j];
		}
	}

	for (i = 0; i < N; i++)
	{
		for (j = 0; j < M; j++)
		{
			printf("%-5d", arr[i][j]);
		}
		printf("\n\n");
	}

	max = arr[0][0];
	min = arr[0][0];
	for (i = 0; i < N; i++)
	{
		for (j = 0; j < M; j++)
		{
			if (arr[i][j] > max)
			{
				max = arr[i][j];
				k1 = i;
				k2 = j;

			}
			if (arr[i][j] < min)
			{
				min = arr[i][j];
				p1 = i;
				p2 = j;
			}
		}
	}

	printf("\n\nsum = %d", sum);
	printf("\n\nmax element arr[%d][%d] = %d", k1,  k2, max);
	printf("\n\nmin element arr[%d][%d] = %d", p1, p2, min);


	printf("\n\t\t\tThe end");
	_getch();
	return 0;
}

/////////////////////////////

Zadacha 3, str.65

//#define _CRT_SECURE_NO_WARNINGS

#include<windows.h>
#include<stdio.h>
#include<conio.h>
#include<math.h>
#include<time.h>


///////searches max in higher then main diagonal

int main()
{
	srand(time(NULL));
	const int N = 6, M = 6;
	int arr[N][M], i, j, sum = 0, max, min, k1, k2, p1, p2;
	//zapolnyaem massiv dannymi ot 1 do 30;

	for (i = 0; i < N; i++)
	{
		for (j = 0; j < M; j++) 
		{
			arr[i][j] = 1 + rand() % 30;
			if (i < j)
			{
				sum += arr[i][j];
			}
		}
	}

	for (i = 0; i < N; i++)
	{
		for (j = 0; j < M; j++)
		{
			printf("%-5d", arr[i][j]);
		}
		printf("\n\n\n");
	}

	printf("\n\nsum = %d", sum);
	//printf("\n\nmax arr[%][%] = %d", k1,k2,max);
	//printf("\n\nmin arr[%][%] = %d", p1, p2, min);



	printf("\n\t\t\tThe end");
	_getch();
	return 0;
}

?????????????????

int main()
{
	srand(time(NULL));
	const int N = 6, M = 6;
	int arr[N][M], i, j, sum = 0, max, min, k1, k2, p1, p2;
	//zapolnyaem massiv dannymi ot 1 do 30;

	for (i = 0; i < N; i++)
	{
		for (j = 0; j < M; j++) 
		{
			arr[i][j] = 1 + rand() % 30;

			if (i < j)
			{
				sum += arr[i][j];
			}
		}
	}


	for (i = 0; i < N; i++)
	{
		for (j = 0; j < M; j++)
		{
			if (i > j)
			{
				if (arr[i][j] > max)
				{
					arr[i][j] = max;
					k1 = i;
					k2 = j;
				}
			}
			if (i > j)
			{
				if (arr[i][j] < min)
				{
					arr[i][j] = min;
					p1 = i;
					p2 = j;
				}
			}
		}
		printf("\n\n\n");
	}

	for (i = 0; i < N; i++)
	{
		for (j = 0; j < M; j++)
		{
			printf("%-5d", arr[i][j]);
		}
		printf("\n\n\n");
	}

	printf("\n\nsum = %d", sum);
	printf("\n\nmax arr[%d][%d] = %d", k1,k2,max);
	printf("\n\nmin arr[%d][%d] = %d", p1, p2, min);



	printf("\n\t\t\tThe end");
	_getch();
	return 0;
}

/////////////////////////////

Functions






